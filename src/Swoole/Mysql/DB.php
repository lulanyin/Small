<?php
/**
 * Create By Hunter
 * 2019/10/6 01:29:54
 */
namespace Small\Swoole\Mysql;

use Swoole\Coroutine;

class DB extends \Small\DB\DB
{
    /**
     * 查询开始
     * @param $tableName
     * @param null $as
     * @return \Small\DB\Query
     */
    public static function from($tableName, $as = null){
        return (new Query())->from($tableName, $as);
    }

    /**
     * 日志打印
     * @param string $text
     * @param bool $output
     */
    public static function log($text, $output = true)
    {
        parent::log($text, true); // TODO: Change the autogenerated stub
    }

    /**
     * 数据库连接对象，在协程上下文的名称
     * @var string
     */
    public static $coMysqlName = 'sw_mysql_connection';

    /**
     * 事务开始
     */
    public static function begin()
    {
        $context = Coroutine::getContext();
        assert($context instanceof Coroutine\Context);
        if(!isset($context[self::$coMysqlName]) || (isset($context[self::$coMysqlName]) && !($context[self::$coMysqlName] instanceof Connection))){
            $configs = config('private.mysql');
            $context[self::$coMysqlName] = new Connection($configs);
        }
        if(!$context[self::$coMysqlName]->inTransaction){
            $context[self::$coMysqlName]->begin();
        }
    }

    /**
     * 事务回滚
     */
    public static function rollback()
    {
        $context = Coroutine::getContext();
        assert($context instanceof Coroutine\Context);
        if(isset($context[self::$coMysqlName]) && $context[self::$coMysqlName] instanceof Connection){
            if($context[self::$coMysqlName]->inTransaction){
                $context[self::$coMysqlName]->rollback();
                //清除上下文
                $context[self::$coMysqlName] = null;
            }
        }
    }

    /**
     * 提交事务
     */
    public static function commit(){
        $context = Coroutine::getContext();
        assert($context instanceof Coroutine\Context);
        if(isset($context[self::$coMysqlName]) && $context[self::$coMysqlName] instanceof Connection){
            if($context[self::$coMysqlName]->inTransaction){
                $context[self::$coMysqlName]->commit();
                //清除上下文
                $context[self::$coMysqlName] = null;
            }
        }
    }

    /**
     * @return mixed|\Small\DB\Connection|null
     */
    public static function getConnection()
    {
        $context = Coroutine::getContext();
        assert($context instanceof Coroutine\Context);
        if(isset($context[self::$coMysqlName]) && $context[self::$coMysqlName] instanceof Connection){
            return $context[self::$coMysqlName];
        }
        return Pool::getPool();
    }
}