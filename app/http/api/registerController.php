<?php
namespace app\http\api;

use app\projectExtend\globalBusiness;
use Small\Config;
use Small\http\HttpController;
use Small\lib\auth\User;
use Small\lib\httpMessage\Request;
use Small\lib\sms\SMS;
use Small\lib\util\Str;
use Small\model\models\UserModel;

/**
 * Class registerController
 * @package app\http\api
 */
class registerController extends HttpController{

    /**
     * 注册
     * @param mixed ...$args
     * @return mixed|void
     */
    public function index(...$args)
    {
        // TODO: Implement index() method.
        $ip = getIP();
        if(empty($ip)){
            $this->response('您的网络环境异常，禁止注册');
        }
//        if(!User::checkRegisterIP($ip)){
//            $this->response("检测到您的注册环境存在多个账号注册行为，暂停注册操作！");
//        }
        //parent::index(); // TODO: Change the autogenerated stub
        $userSet = config('private.user');
        if(!$userSet['open_register'] || !Config::get("server.enable")){
            $this->response("暂未开放注册");
        }
        $nickname = $this->getPOSTData("nickname", null, "请填写昵称");
        if(strlen($nickname)<2 || strlen($nickname)>30){
            $this->response("昵称格式错误");
        }
        $phone = $this->getPOSTData("phone", null, "请填写手机号码");
        if(!Str::isPhoneNumber($phone)){
            $this->response("手机号码格式错误");
        }
        $password = $this->getPOSTData("password", null, "请填写登录密码");
        if(strlen($password)<6 || strlen($password)>16){
            $this->response("密码长度必须6~16位长度");
        }
        $sp = $this->getPOSTData("sp", null, "请填写交易密码");
        if(strlen($sp)<6 || strlen($sp)>16){
            $this->response("交易密码长度必须6~16位长度");
        }
        //手机验证码
        $phone_code = $this->getPOSTData("phone_code", null, "请填写手机验证码");
        if(strlen($phone_code)!=6){
            $this->response("手机验证码错误");
        }
        if(!SMS::checkSMS($phone, $phone_code, "register")){
            $this->response("手机验证码无效或已过期");
        }
        $parent_uid = 0;
        $parents_uid = null;
        $floor = 1;
        $vc = $this->getPOSTData("vc", null, '必须填写邀请码');
        $vc = empty($vc) ? Request::getCookie("vc") : $vc;
        if(!empty($vc)){
            $vc = Str::replace(" ", "", $vc);
            $vc = Str::replace(".", "", $vc);
            if(!empty($vc)){
                $um = new UserModel();
                $parent = $um->mainQuery()
                    ->where(Str::isPhoneNumber($vc) ? 'phone' : 'username', $vc)->first();
                if(!empty($parent)){
                    if($parent["frozen"]==1){
                        Request::dropCookie("vc");
                        $this->response("此邀请码已被冻结！");
                    }
                    $parent_uid = $parent['uid'];
                    $parents_uid = !empty($parent['parents_uid']) ? ($parent_uid.",".$parent['parents_uid']) : $parent_uid;
                    $floor = intval($parent['floor'])+1;
                }else{
                    $this->response("推邀请码不正确！");
                }
            }else{
                $this->response("缺少邀请码");
            }
        }else{
            $this->response("缺少邀请码");
        }
        $auth = new User(false);
        $hash = $this->getPOSTData("hash");
        if(!empty($hash) && strlen($password)==32){
            $auth->md5Pwd = true;
        }
        if($new_uid = $auth->register($phone, $password, 'user', [
            'username' => $auth->getUserName(),
            'nickname' => "base64:".base64_encode($nickname),
            'parent_uid' => $parent_uid,
            'parents_uid' => $parents_uid ?? 0,
            'floor' => $floor
        ])){
            //注册成功
            globalBusiness::after('register', [
                'new_uid'       => $new_uid,
                'parent_uid'    => $parent_uid
            ]);
            //保存交易密码
            User::updateSecondPassword($new_uid, $sp);
            //sms使用
            SMS::checkedSMS($phone, "register");
            //登录
            if($auth->login($phone, $password)){
                $this->response(0, "注册并登录成功", [
                    "token" => $auth->userInfo["token"]
                ]);
            }else{
                $this->response(0, "注册成功");
            }
        }else{
            $this->response($auth->errorInfo);
        }
    }
}